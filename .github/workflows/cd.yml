name: CD

on:
  push:
    branches: [ main ]
    tags:
      - 'v*'
  release:
    types: [ published ]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
    - uses: actions/checkout@v5

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Log in to Container Registry
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Extract metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
        tags: |
          type=ref,event=branch
          type=ref,event=pr
          type=semver,pattern={{version}}
          type=semver,pattern={{major}}.{{minor}}
          type=semver,pattern={{major}}
          type=sha,prefix={{branch}}-
          type=raw,value=latest,enable={{is_default_branch}}

    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max
        platforms: linux/amd64,linux/arm64

    - name: Generate artifact attestation
      uses: actions/attest-build-provenance@v1
      with:
        subject-name: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
        subject-digest: ${{ steps.build.outputs.digest }}
        push-to-registry: true

  deploy-staging:
    needs: build-and-push
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    environment:
      name: staging
      url: https://staging.example.com

    steps:
    - uses: actions/checkout@v5

    - name: Deploy to staging
      run: |
        echo "Deploying to staging environment..."
        echo "IMAGE: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:main"
        # Add your deployment commands here
        # Examples:
        # - SSH to server and pull new image
        # - Use kubectl for Kubernetes
        # - Use docker-compose for simple deployments
        # - Use cloud provider CLI (AWS, GCP, Azure)

    - name: Run smoke tests
      run: |
        echo "Running smoke tests against staging..."
        # Add smoke tests here
        # curl -f https://staging.example.com/healthz

  deploy-production:
    needs: build-and-push
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')
    environment:
      name: production
      url: https://api.example.com

    steps:
    - uses: actions/checkout@v5

    - name: Deploy to production
      run: |
        echo "Deploying to production environment..."
        echo "IMAGE: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.ref_name }}"
        # Add your production deployment commands here

    - name: Run smoke tests
      run: |
        echo "Running smoke tests against production..."
        # Add smoke tests here
        # curl -f https://api.example.com/healthz

    - name: Notify deployment
      if: success()
      run: |
        echo "Production deployment successful!"
        # Add notification logic here (Slack, Discord, email, etc.)
